name: Docker Image CI

on:
  push:
    branches: [ "main" ] # Trigger on pushes to main branch
  pull_request:
    branches: [ "main" ] # Optional: Trigger on PRs to main
  schedule:
    - cron: '0 0 * * 0'  # Weekly rebuilds
    
env:
  REGISTRY: docker.io
  IMAGE_NAME: ${{ vars.DOCKERHUB_USERNAME }}/cobaltstrike

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      security-events: write  # Required for SARIF upload

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
name: Docker Image CI

on:
  push:
    branches: [ "main" ] # Trigger on pushes to main branch
  pull_request:
    branches: [ "main" ] # Optional: Trigger on PRs to main
  schedule:
    - cron: '0 0 * * 0'  # Weekly rebuilds
    
env:
  REGISTRY: docker.io
  IMAGE_NAME: ${{ vars.DOCKERHUB_USERNAME }}/cobaltstrike

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      security-events: write  # Required for SARIF upload

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}